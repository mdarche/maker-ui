{"version":3,"sources":["../../src/fix/pointer-focus-parent.js"],"names":["getFocusTarget","isValidTabIndex","decorateContext","platform","engage","disengage","relevantToCurrentBrowser","is","WEBKIT","handleBeforeFocusEvent","event","target","context","hasAttribute","setAttribute","window","setImmediate","setTimeout","removeAttribute","element","addEventListener","removeEventListener"],"mappings":"AAAA;;;;;;;;;;;;;AAaA,OAAOA,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAIC,eAAJ;AACA,IAAIC,kBAAJ;AACA;AACA,IAAMC,2BAA2BH,SAASI,EAAT,CAAYC,MAA7C;;AAEA,IAAI,CAACF,wBAAL,EAA+B;AAC7BF,WAAS,kBAAW,CAAE,CAAtB;AACD,CAFD,MAEO;AAAA;AACL;AACA;AACA;AACA;AACA,QAAMK,yBAAyB,SAAzBA,sBAAyB,CAASC,KAAT,EAAgB;AAC7C;AACA,UAAMC,SAASX,eAAe,EAACY,SAASF,MAAMC,MAAhB,EAAf,CAAf;AACA,UAAI,CAACA,MAAD,IAAWA,OAAOE,YAAP,CAAoB,UAApB,KAAmCZ,gBAAgBU,MAAhB,CAAlD,EAA2E;AACzE;AACA;AACD;;AAED;AACAA,aAAOG,YAAP,CAAoB,UAApB,EAAgC,CAAhC;;AAEA;AACA,OAACC,OAAOC,YAAP,IAAuBD,OAAOE,UAA/B,EAA2C,YAAW;AACpDN,eAAOO,eAAP,CAAuB,UAAvB;AACD,OAFD,EAEG,CAFH;AAGD,KAfD;;AAiBAd,aAAS,gBAASe,OAAT,EAAkB;AACzBA,cAAQC,gBAAR,CAAyB,WAAzB,EAAsCX,sBAAtC,EAA8D,IAA9D;AACAU,cAAQC,gBAAR,CAAyB,YAAzB,EAAuCX,sBAAvC,EAA+D,IAA/D;AACD,KAHD;;AAKAJ,gBAAY,mBAASc,OAAT,EAAkB;AAC5BA,cAAQE,mBAAR,CAA4B,WAA5B,EAAyCZ,sBAAzC,EAAiE,IAAjE;AACAU,cAAQE,mBAAR,CAA4B,YAA5B,EAA0CZ,sBAA1C,EAAkE,IAAlE;AACD,KAHD;AA3BK;AA+BN;;AAED,eAAeP,gBAAgB,EAAEE,cAAF,EAAUC,oBAAV,EAAhB,CAAf","file":"pointer-focus-parent.js","sourcesContent":["/*\n  Clicking on a link that has a focusable element in its ancestry [tabindex=\"-1\"],\n  can lead to that parental element gaining focus, instead of the link.\n\n  Example:\n    <div tabindex=\"-1\">\n      <a href=\"#foo\">click me</a>\n    </div>\n\n  This (wrong) behavior was observed in Chrome 38, iOS8, Safari 6.2, WebKit r175131\n  It is not a problem in Firefox 33, Internet Explorer 11, Chrome 39.\n*/\n\nimport getFocusTarget from '../get/focus-target';\nimport isValidTabIndex from '../is/valid-tabindex';\nimport decorateContext from '../util/decorate-context';\nimport platform from '../util/platform';\n\nlet engage;\nlet disengage;\n// This fix is only relevant to WebKit\nconst relevantToCurrentBrowser = platform.is.WEBKIT;\n\nif (!relevantToCurrentBrowser) {\n  engage = function() {};\n} else {\n  // add [tabindex=\"0\"] to the (focusable) element that is about to be clicked\n  // if it does not already have an explicit tabindex (attribute).\n  // By applying an explicit tabindex, WebKit will not go look for\n  // the first valid tabindex in the element's parents.\n  const handleBeforeFocusEvent = function(event) {\n    // find the element that would receive focus\n    const target = getFocusTarget({context: event.target});\n    if (!target || target.hasAttribute('tabindex') && isValidTabIndex(target)) {\n      // there's nothing to focus, or the element already has tabindex, we're good\n      return;\n    }\n\n    // assign explicit tabindex, as implicit tabindex is the problem\n    target.setAttribute('tabindex', 0);\n\n    // add cleanup to the RunLoop\n    (window.setImmediate || window.setTimeout)(function() {\n      target.removeAttribute('tabindex');\n    }, 0);\n  };\n\n  engage = function(element) {\n    element.addEventListener('mousedown', handleBeforeFocusEvent, true);\n    element.addEventListener('touchstart', handleBeforeFocusEvent, true);\n  };\n\n  disengage = function(element) {\n    element.removeEventListener('mousedown', handleBeforeFocusEvent, true);\n    element.removeEventListener('touchstart', handleBeforeFocusEvent, true);\n  };\n}\n\nexport default decorateContext({ engage, disengage });\n"]}