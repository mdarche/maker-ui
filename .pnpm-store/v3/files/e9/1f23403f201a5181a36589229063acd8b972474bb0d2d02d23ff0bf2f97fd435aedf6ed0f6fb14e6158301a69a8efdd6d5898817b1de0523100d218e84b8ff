{"version":3,"sources":["../../src/query/shadow-hosts.js"],"names":["contextToElement","getDocument","filter","node","shadowRoot","NodeFilter","FILTER_ACCEPT","FILTER_SKIP","acceptNode","queryShadowHosts","context","element","label","resolveDocument","defaultToDocument","_document","walker","createTreeWalker","SHOW_ELEMENT","list","push","concat","nextNode","currentNode"],"mappings":";AACA,OAAOA,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA;AACA,IAAMC,SAAS,SAATA,MAAS,CAASC,IAAT,EAAe;AAC5B,MAAIA,KAAKC,UAAT,EAAqB;AACnB,WAAOC,WAAWC,aAAlB;AACD;;AAED,SAAOD,WAAWE,WAAlB;AACD,CAND;AAOA;AACA;AACAL,OAAOM,UAAP,GAAoBN,MAApB;;AAEA,eAAe,SAASO,gBAAT,GAA4C;AAAA,iFAAJ,EAAI;AAAA,MAAhBC,OAAgB,QAAhBA,OAAgB;;AACzD,MAAMC,UAAUX,iBAAiB;AAC/BY,WAAO,oBADwB;AAE/BC,qBAAiB,IAFc;AAG/BC,uBAAmB,IAHY;AAI/BJ;AAJ+B,GAAjB,CAAhB;;AAOA,MAAMK,YAAYd,YAAYS,OAAZ,CAAlB;AACA;AACA,MAAMM,SAASD,UAAUE,gBAAV;AACb;AACAN,SAFa;AAGb;AACAN,aAAWa,YAJE;AAKb;AACAhB,QANa;AAOb;AACA,OARa,CAAf;;AAWA,MAAIiB,OAAO,EAAX;;AAEA,MAAIR,QAAQP,UAAZ,EAAwB;AACtB;AACAe,SAAKC,IAAL,CAAUT,OAAV;AACAQ,WAAOA,KAAKE,MAAL,CAAYZ,iBAAiB;AAClCC,eAASC,QAAQP;AADiB,KAAjB,CAAZ,CAAP;AAGD;;AAED,SAAOY,OAAOM,QAAP,EAAP,EAA0B;AACxBH,SAAKC,IAAL,CAAUJ,OAAOO,WAAjB;AACAJ,WAAOA,KAAKE,MAAL,CAAYZ,iBAAiB;AAClCC,eAASM,OAAOO,WAAP,CAAmBnB;AADM,KAAjB,CAAZ,CAAP;AAGD;;AAED,SAAOe,IAAP;AACD","file":"shadow-hosts.js","sourcesContent":["\nimport contextToElement from '../util/context-to-element';\nimport getDocument from '../util/get-document';\n\n// see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\nconst filter = function(node) {\n  if (node.shadowRoot) {\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  return NodeFilter.FILTER_SKIP;\n};\n// IE requires a function, Browsers require {acceptNode: function}\n// see http://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\nfilter.acceptNode = filter;\n\nexport default function queryShadowHosts({ context } = {}) {\n  const element = contextToElement({\n    label: 'query/shadow-hosts',\n    resolveDocument: true,\n    defaultToDocument: true,\n    context,\n  });\n\n  const _document = getDocument(context);\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Document/createTreeWalker\n  const walker = _document.createTreeWalker(\n    // root element to start search in\n    element,\n    // element type filter\n    NodeFilter.SHOW_ELEMENT,\n    // custom NodeFilter filter\n    filter,\n    // deprecated, but IE requires it\n    false\n  );\n\n  let list = [];\n\n  if (element.shadowRoot) {\n    // TreeWalker does not run the filter on the context element\n    list.push(element);\n    list = list.concat(queryShadowHosts({\n      context: element.shadowRoot,\n    }));\n  }\n\n  while (walker.nextNode()) {\n    list.push(walker.currentNode);\n    list = list.concat(queryShadowHosts({\n      context: walker.currentNode.shadowRoot,\n    }));\n  }\n\n  return list;\n}\n"]}