{"version":3,"sources":["../../src/fix/pointer-focus-input.js"],"names":["engage","disengage","relevantToCurrentBrowser","is","OSX","GECKO","WEBKIT","handleMouseDownEvent","event","defaultPrevented","target","context","window","setImmediate","setTimeout","focus","handleMouseUpEvent","element","addEventListener","removeEventListener"],"mappings":";;;;;;AAWA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAdA;;;;;;;;;;;AAgBA,IAAIA,eAAJ;AACA,IAAIC,kBAAJ;AACA;AACA,IAAMC,2BAA2B,mBAASC,EAAT,CAAYC,GAAZ,KAAoB,mBAASD,EAAT,CAAYE,KAAZ,IAAqB,mBAASF,EAAT,CAAYG,MAArD,CAAjC;;AAEA,IAAI,CAACJ,wBAAL,EAA+B;AAC7BF,WAAS,kBAAW,CAAE,CAAtB;AACD,CAFD,MAEO;AAAA;AACL,QAAMO,uBAAuB,SAAvBA,oBAAuB,CAASC,KAAT,EAAgB;AAC3C,UAAIA,MAAMC,gBAAN,IAA0B,CAAC,8BAAeD,MAAME,MAArB,EAA6B,yBAA7B,CAA/B,EAAwF;AACtF;AACA;AACA;AACD;;AAED,UAAMA,SAAS,2BAAe;AAC5BC,iBAASH,MAAME;AADa,OAAf,CAAf;;AAIA;AACA,OAACE,OAAOC,YAAP,IAAuBD,OAAOE,UAA/B,EAA2C,YAAW;AACpDJ,eAAOK,KAAP;AACD,OAFD;AAGD,KAfD;;AAiBA,QAAMC,qBAAqB,SAArBA,kBAAqB,CAASR,KAAT,EAAgB;AACzC,UAAIA,MAAMC,gBAAN,IAA0B,CAAC,8BAAeD,MAAME,MAArB,EAA6B,gBAA7B,CAA/B,EAA+E;AAC7E;AACA;AACA;AACD;;AAED,UAAMA,SAAS,2BAAe;AAC5BC,iBAASH,MAAME;AADa,OAAf,CAAf;;AAIA,UAAI,CAACA,MAAL,EAAa;AACX;AACD;;AAEDA,aAAOK,KAAP;AACD,KAhBD;;AAkBAf,aAAS,gBAASiB,OAAT,EAAkB;AACzBA,cAAQC,gBAAR,CAAyB,WAAzB,EAAsCX,oBAAtC,EAA4D,KAA5D;AACA;AACAU,cAAQC,gBAAR,CAAyB,SAAzB,EAAoCF,kBAApC,EAAwD,KAAxD;AACD,KAJD;;AAMAf,gBAAY,mBAASgB,OAAT,EAAkB;AAC5BA,cAAQE,mBAAR,CAA4B,WAA5B,EAAyCZ,oBAAzC,EAA+D,KAA/D;AACAU,cAAQE,mBAAR,CAA4B,SAA5B,EAAuCH,kBAAvC,EAA2D,KAA3D;AACD,KAHD;AA1CK;AA8CN;;kBAEc,+BAAgB,EAAEhB,cAAF,EAAUC,oBAAV,EAAhB,C","file":"pointer-focus-input.js","sourcesContent":["/*\n  Clicking on form field does not necessarily assign it focus in Safari and Firefox on Mac OS X.\n  While not a browser bug, it may be considered undesired behavior.\n\n  https://bugs.webkit.org/show_bug.cgi?id=22261\n  https://bugs.webkit.org/show_bug.cgi?id=118043\n\n  Note: This behavior can be turned off in Firefox by changing the\n  option `accessibility.mouse_focuses_formcontrol` in about:config\n*/\n\nimport getFocusTarget from '../get/focus-target';\nimport decorateContext from '../util/decorate-context';\nimport elementMatches from '../util/element-matches';\nimport platform from '../util/platform';\n\nlet engage;\nlet disengage;\n// This fix is only relevant to Safari and Firefox on OSX\nconst relevantToCurrentBrowser = platform.is.OSX && (platform.is.GECKO || platform.is.WEBKIT);\n\nif (!relevantToCurrentBrowser) {\n  engage = function() {};\n} else {\n  const handleMouseDownEvent = function(event) {\n    if (event.defaultPrevented || !elementMatches(event.target, 'input, button, button *')) {\n      // abort if the mousedown event was cancelled,\n      // or we're not dealing with an affected form control\n      return;\n    }\n\n    const target = getFocusTarget({\n      context: event.target,\n    });\n\n    // we need to set focus AFTER the mousedown finished, otherwise WebKit will ignore the call\n    (window.setImmediate || window.setTimeout)(function() {\n      target.focus();\n    });\n  };\n\n  const handleMouseUpEvent = function(event) {\n    if (event.defaultPrevented || !elementMatches(event.target, 'label, label *')) {\n      // abort if the mouseup event was cancelled,\n      // or we're not dealing with a <label>\n      return;\n    }\n\n    const target = getFocusTarget({\n      context: event.target,\n    });\n\n    if (!target) {\n      return;\n    }\n\n    target.focus();\n  };\n\n  engage = function(element) {\n    element.addEventListener('mousedown', handleMouseDownEvent, false);\n    // <label> elements redirect focus upon mouseup, not mousedown\n    element.addEventListener('mouseup', handleMouseUpEvent, false);\n  };\n\n  disengage = function(element) {\n    element.removeEventListener('mousedown', handleMouseDownEvent, false);\n    element.removeEventListener('mouseup', handleMouseUpEvent, false);\n  };\n}\n\nexport default decorateContext({ engage, disengage });\n"]}