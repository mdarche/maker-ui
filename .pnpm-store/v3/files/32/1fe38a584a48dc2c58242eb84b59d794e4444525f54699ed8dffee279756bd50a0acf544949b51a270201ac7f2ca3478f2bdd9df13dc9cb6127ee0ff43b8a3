{"version":3,"sources":["../../src/observe/shadow-mutations.js"],"names":["context","callback","config","TypeError","window","MutationObserver","disengage","element","label","resolveDocument","defaultToDocument","service","ShadowMutationObserver","shadowObserverConfig","childList","subtree","bind","clientObserver","hostObserver","mutations","forEach","handleHostMutation","observeContext","observeShadowHosts","disconnect","hosts","shadowRoot","observe","mutation","type","addedElements","addedNodes","filter","nodeType","Node","ELEMENT_NODE"],"mappings":";;;;;;;;;;kBAqDe,YAIP;AAAA,kFAAJ,EAAI;AAAA,MAHNA,OAGM,SAHNA,OAGM;AAAA,MAFNC,QAEM,SAFNA,QAEM;AAAA,MADNC,MACM,SADNA,MACM;;AACN,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIE,SAAJ,CAAc,qEAAd,CAAN;AACD;;AAED,MAAI,QAAOD,MAAP,yCAAOA,MAAP,OAAkB,QAAtB,EAAgC;AAC9B,UAAM,IAAIC,SAAJ,CAAc,kEAAd,CAAN;AACD;;AAED,MAAI,CAACC,OAAOC,gBAAZ,EAA8B;AAC5B;AACA;AACA,WAAO;AACLC,iBAAW,qBAAW,CAAE;AADnB,KAAP;AAGD;;AAED,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,0BADwB;AAE/BC,qBAAiB,IAFc;AAG/BC,uBAAmB,IAHY;AAI/BV;AAJ+B,GAAjB,CAAhB;;AAOA,MAAMW,UAAU,IAAIC,sBAAJ,CAA2B;AACzCZ,aAASO,OADgC;AAEzCN,sBAFyC;AAGzCC;AAHyC,GAA3B,CAAhB;;AAMA,SAAO;AACLI,eAAWK,QAAQL;AADd,GAAP;AAGD,C;;AAzFD;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMO,uBAAuB;AAC3BC,aAAW,IADgB;AAE3BC,WAAS;AAFkB,CAA7B;;IAKMH,sB;AACJ,oCAA8C;AAAA;;AAAA,mFAAJ,EAAI;AAAA,QAAjCZ,OAAiC,QAAjCA,OAAiC;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAdC,MAAc,QAAdA,MAAc;;AAAA;;AAC5C,SAAKA,MAAL,GAAcA,MAAd;;AAEA,SAAKI,SAAL,GAAiB,KAAKA,SAAL,CAAeU,IAAf,CAAoB,IAApB,CAAjB;;AAEA,SAAKC,cAAL,GAAsB,IAAIZ,gBAAJ,CAAqBJ,QAArB,CAAtB;AACA,SAAKiB,YAAL,GAAoB,IAAIb,gBAAJ,CAAqB;AAAA,aAAac,UAAUC,OAAV,CAAkB,MAAKC,kBAAvB,QAAb;AAAA,KAArB,CAApB;;AAEA,SAAKC,cAAL,CAAoBtB,OAApB;AACA,SAAKuB,kBAAL,CAAwBvB,OAAxB;AACD;;;;gCAEW;AACV,WAAKiB,cAAL,IAAuB,KAAKA,cAAL,CAAoBO,UAApB,EAAvB;AACA,WAAKP,cAAL,GAAsB,IAAtB;AACA,WAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBM,UAAlB,EAArB;AACA,WAAKN,YAAL,GAAoB,IAApB;AACD;;;uCAEkBlB,O,EAAS;AAAA;;AAC1B,UAAMyB,QAAQ,2BAAiB;AAC7BzB;AAD6B,OAAjB,CAAd;;AAIAyB,YAAML,OAAN,CAAc;AAAA,eAAW,OAAKE,cAAL,CAAoBf,QAAQmB,UAA5B,CAAX;AAAA,OAAd;AACD;;;mCAEc1B,O,EAAS;AACtB,WAAKiB,cAAL,CAAoBU,OAApB,CAA4B3B,OAA5B,EAAqC,KAAKE,MAA1C;AACA,WAAKgB,YAAL,CAAkBS,OAAlB,CAA0B3B,OAA1B,EAAmCa,oBAAnC;AACD;;;uCAEkBe,Q,EAAU;AAC3B,UAAIA,SAASC,IAAT,KAAkB,WAAtB,EAAmC;AACjC;AACD;;AAED,UAAMC,gBAAgB,yBAAUF,SAASG,UAAnB,EAA+BC,MAA/B,CAAsC;AAAA,eAAWzB,QAAQ0B,QAAR,KAAqBC,KAAKC,YAArC;AAAA,OAAtC,CAAtB;AACAL,oBAAcV,OAAd,CAAsB,KAAKG,kBAA3B,EAA+C,IAA/C;AACD","file":"shadow-mutations.js","sourcesContent":["\nimport nodeArray from '../util/node-array';\nimport queryShadowHosts from '../query/shadow-hosts';\nimport contextToElement from '../util/context-to-element';\n\nconst shadowObserverConfig = {\n  childList: true,\n  subtree: true,\n};\n\nclass ShadowMutationObserver {\n  constructor({context, callback, config} = {}) {\n    this.config = config;\n\n    this.disengage = this.disengage.bind(this);\n\n    this.clientObserver = new MutationObserver(callback);\n    this.hostObserver = new MutationObserver(mutations => mutations.forEach(this.handleHostMutation, this));\n\n    this.observeContext(context);\n    this.observeShadowHosts(context);\n  }\n\n  disengage() {\n    this.clientObserver && this.clientObserver.disconnect();\n    this.clientObserver = null;\n    this.hostObserver && this.hostObserver.disconnect();\n    this.hostObserver = null;\n  }\n\n  observeShadowHosts(context) {\n    const hosts = queryShadowHosts({\n      context,\n    });\n\n    hosts.forEach(element => this.observeContext(element.shadowRoot));\n  }\n\n  observeContext(context) {\n    this.clientObserver.observe(context, this.config);\n    this.hostObserver.observe(context, shadowObserverConfig);\n  }\n\n  handleHostMutation(mutation) {\n    if (mutation.type !== 'childList') {\n      return;\n    }\n\n    const addedElements = nodeArray(mutation.addedNodes).filter(element => element.nodeType === Node.ELEMENT_NODE);\n    addedElements.forEach(this.observeShadowHosts, this);\n  }\n}\n\nexport default function({\n  context,\n  callback,\n  config,\n} = {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('observe/shadow-mutations requires options.callback to be a function');\n  }\n\n  if (typeof config !== 'object') {\n    throw new TypeError('observe/shadow-mutations requires options.config to be an object');\n  }\n\n  if (!window.MutationObserver) {\n    // not supporting IE10 via Mutation Events, because they're too expensive\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Mutation_events\n    return {\n      disengage: function() {},\n    };\n  }\n\n  const element = contextToElement({\n    label: 'observe/shadow-mutations',\n    resolveDocument: true,\n    defaultToDocument: true,\n    context,\n  });\n\n  const service = new ShadowMutationObserver({\n    context: element,\n    callback,\n    config,\n  });\n\n  return {\n    disengage: service.disengage,\n  };\n}\n"]}