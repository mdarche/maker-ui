{"version":3,"sources":["../../src/get/insignificant-branches.js"],"names":["context","filter","label","defaultToDocument","length","TypeError","queryInsignificantBranches","containsFilteredElement","node","containsNode","parent","some","insiginificantBranches","CollectInsignificantBranchesFilter","element","NodeFilter","FILTER_REJECT","FILTER_ACCEPT","push","acceptNode","_document","walker","createTreeWalker","SHOW_ELEMENT","nextNode"],"mappings":";;;;;;kBA6De,YAAiC;AAAA,kFAAJ,EAAI;AAAA,MAAvBA,OAAuB,SAAvBA,OAAuB;AAAA,MAAdC,MAAc,SAAdA,MAAc;;AAC9CD,YAAU,gCAAiB;AACzBE,WAAO,4BADkB;AAEzBC,uBAAmB,IAFM;AAGzBH;AAHyB,GAAjB,CAAV;;AAMAC,WAAS,yBAAUA,MAAV,CAAT;AACA,MAAI,CAACA,OAAOG,MAAZ,EAAoB;AAClB,UAAM,IAAIC,SAAJ,CAAc,0DAAd,CAAN;AACD;;AAED,SAAOC,2BAA2B;AAChCN,oBADgC;AAEhCC;AAFgC,GAA3B,CAAP;AAID,C;;AAtED;;;;AACA;;;;AACA;;AACA;;;;;;AATA;AACA;AACA;AACA;AACA;;AAOA,SAASK,0BAAT,OAAuD;AAAA,MAAlBN,OAAkB,QAAlBA,OAAkB;AAAA,MAATC,MAAS,QAATA,MAAS;;AACrD,MAAMM,0BAA0B,SAA1BA,uBAA0B,CAASC,IAAT,EAAe;AAC7C,QAAMC,eAAe,0CAAoB,EAACC,QAAQF,IAAT,EAApB,CAArB;AACA,WAAOP,OAAOU,IAAP,CAAYF,YAAZ,CAAP;AACD,GAHD;;AAKA;AACA,MAAMG,yBAAyB,EAA/B;;AAEA;AACA,MAAMC,qCAAqC,SAArCA,kCAAqC,CAASL,IAAT,EAAe;AACxD,QAAIP,OAAOU,IAAP,CAAY;AAAA,aAAWH,SAASM,OAApB;AAAA,KAAZ,CAAJ,EAA8C;AAC5C;AACA,aAAOC,WAAWC,aAAlB;AACD;;AAED,QAAIT,wBAAwBC,IAAxB,CAAJ,EAAmC;AACjC;AACA,aAAOO,WAAWE,aAAlB;AACD;;AAED;AACAL,2BAAuBM,IAAvB,CAA4BV,IAA5B;AACA,WAAOO,WAAWC,aAAlB;AACD,GAdD;AAeA;AACA;AACAH,qCAAmCM,UAAnC,GAAgDN,kCAAhD;;AAEA,MAAMO,YAAY,2BAAYpB,OAAZ,CAAlB;AACA;AACA,MAAMqB,SAASD,UAAUE,gBAAV;AACb;AACAtB,SAFa;AAGb;AACAe,aAAWQ,YAJE;AAKb;AACAV,oCANa;AAOb;AACA,OARa,CAAf;;AAWA,SAAOQ,OAAOG,QAAP,EAAP,EAA0B;AACxB;AACD;;AAED,SAAOZ,sBAAP;AACD","file":"insignificant-branches.js","sourcesContent":["\n// find all highest elements within context that do not contain any of the filter elements.\n// (basically the tree minus the parent paths of each filtered element reduced to the top most nodes)\n// originally inspired by Marcy Sutton's Material Dialog Component:\n// https://github.com/angular/material/blob/v0.11.1/src/components/dialog/dialog.js#L748-L783\n// to avoid this behavior: https://marcysutton.com/slides/mobile-a11y-seattlejs/#/36\n\nimport contextToElement from '../util/context-to-element';\nimport nodeArray from '../util/node-array';\nimport {getParentComparator} from '../util/compare-position';\nimport getDocument from '../util/get-document';\n\nfunction queryInsignificantBranches({context, filter}) {\n  const containsFilteredElement = function(node) {\n    const containsNode = getParentComparator({parent: node});\n    return filter.some(containsNode);\n  };\n\n  // We'd use a Set() for this, if we could\n  const insiginificantBranches = [];\n\n  // see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\n  const CollectInsignificantBranchesFilter = function(node) {\n    if (filter.some(element => node === element)) {\n      // we've hit a filtered element and can ignore its children\n      return NodeFilter.FILTER_REJECT;\n    }\n\n    if (containsFilteredElement(node)) {\n      // we've hit a significant tree, so we'll have to keep investigating\n      return NodeFilter.FILTER_ACCEPT;\n    }\n\n    // we've found an insignificant tree\n    insiginificantBranches.push(node);\n    return NodeFilter.FILTER_REJECT;\n  };\n  // IE requires a function, Browsers require {acceptNode: function}\n  // see https://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\n  CollectInsignificantBranchesFilter.acceptNode = CollectInsignificantBranchesFilter;\n\n  const _document = getDocument(context);\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Document/createTreeWalker\n  const walker = _document.createTreeWalker(\n    // root element to start search in\n    context,\n    // element type filter\n    NodeFilter.SHOW_ELEMENT,\n    // custom NodeFilter filter\n    CollectInsignificantBranchesFilter,\n    // deprecated, but IE requires it\n    false\n  );\n\n  while (walker.nextNode()) {\n    // collection things is happening through the filter method\n  }\n\n  return insiginificantBranches;\n}\n\nexport default function({context, filter} = {}) {\n  context = contextToElement({\n    label: 'get/insignificant-branches',\n    defaultToDocument: true,\n    context,\n  });\n\n  filter = nodeArray(filter);\n  if (!filter.length) {\n    throw new TypeError('get/insignificant-branches requires valid options.filter');\n  }\n\n  return queryInsignificantBranches({\n    context,\n    filter,\n  });\n}\n"]}