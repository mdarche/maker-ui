{"version":3,"sources":["../../src/when/visible-area.js"],"names":["context","callback","area","TypeError","element","label","raf","evaluate","disengage","cancelAnimationFrame","predicate","checkPredicate","requestAnimationFrame"],"mappings":";;;;;;kBAUe,YAAyC;AAAA,iFAAJ,EAAI;AAAA,MAA/BA,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,IAAY,QAAZA,IAAY;;AACtD,MAAI,OAAOD,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAM,IAAIE,SAAJ,CAAc,8DAAd,CAAN;AACD;;AAED,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,WAAO,CAAP;AACD;;AAED,MAAME,UAAU,gCAAiB;AAC/BC,WAAO,mBADwB;AAE/BL;AAF+B,GAAjB,CAAhB;;AAKA,MAAIM,YAAJ;AACA,MAAIC,WAAW,IAAf;AACA,MAAMC,YAAY,SAAZA,SAAY,GAAW;AAC3BF,WAAOG,qBAAqBH,GAArB,CAAP;AACD,GAFD;;AAIA,MAAMI,YAAY,SAAZA,SAAY,GAAW;AAC3B,WAAO,CAAC,uBAAUN,OAAV,CAAD,IAAuB,2BAAYA,OAAZ,IAAuBF,IAA9C,IAAsDD,SAASG,OAAT,MAAsB,KAAnF;AACD,GAFD;;AAIA,MAAMO,iBAAiB,SAAjBA,cAAiB,GAAW;AAChC,QAAID,WAAJ,EAAiB;AACfH;AACA;AACD;;AAEDC;AACD,GAPD;;AASAD,aAAW,oBAAW;AACpBD,UAAMM,sBAAsBD,cAAtB,CAAN;AACD,GAFD;;AAIAJ;AACA,SAAO,EAAEC,oBAAF,EAAP;AACD,C;;AA5CD;;AACA;;;;AACA;;;;AACA;;;;;;;AAPA","file":"visible-area.js","sourcesContent":["\n/*\n  execute a callback once an element became fully visible in the viewport\n*/\n\nimport '../prototype/window.requestanimationframe';\nimport isVisible from '../is/visible';\nimport visibleArea from '../util/visible-area';\nimport contextToElement from '../util/context-to-element';\n\nexport default function({context, callback, area} = {}) {\n  if (typeof callback !== 'function') {\n    throw new TypeError('when/visible-area requires options.callback to be a function');\n  }\n\n  if (typeof area !== 'number') {\n    area = 1;\n  }\n\n  const element = contextToElement({\n    label: 'when/visible-area',\n    context,\n  });\n\n  let raf;\n  let evaluate = null;\n  const disengage = function() {\n    raf && cancelAnimationFrame(raf);\n  };\n\n  const predicate = function() {\n    return !isVisible(element) || visibleArea(element) < area || callback(element) === false;\n  };\n\n  const checkPredicate = function() {\n    if (predicate()) {\n      evaluate();\n      return;\n    }\n\n    disengage();\n  };\n\n  evaluate = function() {\n    raf = requestAnimationFrame(checkPredicate);\n  };\n\n  evaluate();\n  return { disengage };\n}\n"]}