{"version":3,"sources":["../../src/element/focus.js"],"names":["context","defaultToAncestor","undoScrolling","element","label","targetIsFocusable","rules","except","target","_undoScrolling","result","focus","_window","HTMLElement","prototype","call","e","actionPerformed","flexbox","scrollable","onlyTabbable"],"mappings":";;;;;;kBA2Ce,UAASA,OAAT,EAGP;AAAA,iFAAJ,EAAI;AAAA,MAFNC,iBAEM,QAFNA,iBAEM;AAAA,MADNC,aACM,QADNA,aACM;;AACN,MAAMC,UAAU,gCAAiB;AAC/BC,WAAO,eADwB;AAE/BJ;AAF+B,GAAjB,CAAhB;;AAKA,MAAMK,oBAAoB,oBAAYC,KAAZ,CAAkB;AAC1CN,aAASG,OADiC;AAE1CI;AAF0C,GAAlB,CAA1B;;AAKA,MAAI,CAACN,iBAAD,IAAsB,CAACI,iBAA3B,EAA8C;AAC5C,WAAO,IAAP;AACD;;AAED,MAAMG,SAAS,2BAAe;AAC5BR,aAASG,OADmB;AAE5BI;AAF4B,GAAf,CAAf;;AAKA,MAAI,CAACC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAI,6BAAgBA,MAAhB,CAAJ,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,MAAIC,uBAAJ;AACA,MAAIP,aAAJ,EAAmB;AACjBO,qBAAiB,8BAAeD,MAAf,CAAjB;AACD;;AAED,MAAME,SAASC,MAAMH,MAAN,CAAf;;AAEAC,oBAAkBA,gBAAlB;;AAEA,SAAOC,MAAP;AACD,C;;AAjFD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASC,KAAT,CAAeR,OAAf,EAAwB;AACtB,MAAIA,QAAQQ,KAAZ,EAAmB;AACjBR,YAAQQ,KAAR;AACA,WAAO,6BAAgBR,OAAhB,IAA2BA,OAA3B,GAAqC,IAA5C;AACD;;AAED,MAAMS,UAAU,yBAAUT,OAAV,CAAhB;;AAEA,MAAI;AACF;AACA;AACA;AACA;AACA;AACAS,YAAQC,WAAR,CAAoBC,SAApB,CAA8BH,KAA9B,CAAoCI,IAApC,CAAyCZ,OAAzC;AACA,WAAO,6BAAgBA,OAAhB,IAA2BA,OAA3B,GAAqC,IAA5C;AACD,GARD,CAQE,OAAOa,CAAP,EAAU;AACV,QAAMC,kBAAkB,qBAA0Bd,OAA1B,CAAxB;AACA,WAAOc,mBAAmB,6BAAgBd,OAAhB,CAAnB,GAA8CA,OAA9C,GAAwD,IAA/D;AACD;AACF;AA9BD;;AAgCA,IAAMI,SAAS;AACb;AACAW,WAAS,IAFI;AAGb;AACA;AACAC,cAAY,IALC;AAMb;AACAC,gBAAc;AAPD,CAAf","file":"focus.js","sourcesContent":["\n// wrapper for HTMLElement.prototype.focus\n\nimport focusSvgForeignObjectHack from './focus.svg-foreign-object-hack';\nimport getFocusTarget from '../get/focus-target';\nimport isActiveElement from '../is/active-element';\nimport isFocusable from '../is/focusable';\nimport contextToElement from '../util/context-to-element';\nimport getWindow from '../util/get-window';\nimport resetScrolling from '../util/reset-scrolling';\n\nfunction focus(element) {\n  if (element.focus) {\n    element.focus();\n    return isActiveElement(element) ? element : null;\n  }\n\n  const _window = getWindow(element);\n\n  try {\n    // The element itself does not have a focus method.\n    // This is true for SVG elements in Firefox and IE,\n    // as well as MathML elements in every browser.\n    // IE9 - 11 will let us abuse HTMLElement's focus method,\n    // Firefox and Edge will throw an error.\n    _window.HTMLElement.prototype.focus.call(element);\n    return isActiveElement(element) ? element : null;\n  } catch (e) {\n    const actionPerformed = focusSvgForeignObjectHack(element);\n    return actionPerformed && isActiveElement(element) ? element : null;\n  }\n}\n\nconst except = {\n  // exclude elements affected by the IE flexbox bug\n  flexbox: true,\n  // exclude overflowing elements that are not intentionally\n  // made focusable by adding a tabindex attribute\n  scrollable: true,\n  // include elements that don't have a focus() method\n  onlyTabbable: true,\n};\n\nexport default function(context, {\n  defaultToAncestor,\n  undoScrolling,\n} = {}) {\n  const element = contextToElement({\n    label: 'element/focus',\n    context,\n  });\n\n  const targetIsFocusable = isFocusable.rules({\n    context: element,\n    except,\n  });\n\n  if (!defaultToAncestor && !targetIsFocusable) {\n    return null;\n  }\n\n  const target = getFocusTarget({\n    context: element,\n    except,\n  });\n\n  if (!target) {\n    return null;\n  }\n\n  if (isActiveElement(target)) {\n    return target;\n  }\n\n  let _undoScrolling;\n  if (undoScrolling) {\n    _undoScrolling = resetScrolling(target);\n  }\n\n  const result = focus(target);\n\n  _undoScrolling && _undoScrolling();\n\n  return result;\n}\n"]}