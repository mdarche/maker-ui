{"version":3,"sources":["../../src/get/insignificant-branches.js"],"names":["context","filter","label","defaultToDocument","length","TypeError","queryInsignificantBranches","containsFilteredElement","node","containsNode","parent","some","insiginificantBranches","CollectInsignificantBranchesFilter","element","NodeFilter","FILTER_REJECT","FILTER_ACCEPT","push","acceptNode","_document","walker","createTreeWalker","SHOW_ELEMENT","nextNode"],"mappings":";;;;;;;;;;;;;;;;;;;oBA6De,YAAiC;AAAA,oFAAJ,EAAI;AAAA,QAAvBA,OAAuB,SAAvBA,OAAuB;AAAA,QAAdC,MAAc,SAAdA,MAAc;;AAC9CD,cAAU,gCAAiB;AACzBE,aAAO,4BADkB;AAEzBC,yBAAmB,IAFM;AAGzBH;AAHyB,KAAjB,CAAV;;AAMAC,aAAS,yBAAUA,MAAV,CAAT;AACA,QAAI,CAACA,OAAOG,MAAZ,EAAoB;AAClB,YAAM,IAAIC,SAAJ,CAAc,0DAAd,CAAN;AACD;;AAED,WAAOC,2BAA2B;AAChCN,sBADgC;AAEhCC;AAFgC,KAA3B,CAAP;AAID,G;;;;;;;;;;;;;;AA5ED;AACA;AACA;AACA;AACA;;AAOA,WAASK,0BAAT,OAAuD;AAAA,QAAlBN,OAAkB,QAAlBA,OAAkB;AAAA,QAATC,MAAS,QAATA,MAAS;;AACrD,QAAMM,0BAA0B,SAA1BA,uBAA0B,CAASC,IAAT,EAAe;AAC7C,UAAMC,eAAe,0CAAoB,EAACC,QAAQF,IAAT,EAApB,CAArB;AACA,aAAOP,OAAOU,IAAP,CAAYF,YAAZ,CAAP;AACD,KAHD;;AAKA;AACA,QAAMG,yBAAyB,EAA/B;;AAEA;AACA,QAAMC,qCAAqC,SAArCA,kCAAqC,CAASL,IAAT,EAAe;AACxD,UAAIP,OAAOU,IAAP,CAAY;AAAA,eAAWH,SAASM,OAApB;AAAA,OAAZ,CAAJ,EAA8C;AAC5C;AACA,eAAOC,WAAWC,aAAlB;AACD;;AAED,UAAIT,wBAAwBC,IAAxB,CAAJ,EAAmC;AACjC;AACA,eAAOO,WAAWE,aAAlB;AACD;;AAED;AACAL,6BAAuBM,IAAvB,CAA4BV,IAA5B;AACA,aAAOO,WAAWC,aAAlB;AACD,KAdD;AAeA;AACA;AACAH,uCAAmCM,UAAnC,GAAgDN,kCAAhD;;AAEA,QAAMO,YAAY,2BAAYpB,OAAZ,CAAlB;AACA;AACA,QAAMqB,SAASD,UAAUE,gBAAV;AACb;AACAtB,WAFa;AAGb;AACAe,eAAWQ,YAJE;AAKb;AACAV,sCANa;AAOb;AACA,SARa,CAAf;;AAWA,WAAOQ,OAAOG,QAAP,EAAP,EAA0B;AACxB;AACD;;AAED,WAAOZ,sBAAP;AACD","file":"insignificant-branches.js","sourcesContent":["\n// find all highest elements within context that do not contain any of the filter elements.\n// (basically the tree minus the parent paths of each filtered element reduced to the top most nodes)\n// originally inspired by Marcy Sutton's Material Dialog Component:\n// https://github.com/angular/material/blob/v0.11.1/src/components/dialog/dialog.js#L748-L783\n// to avoid this behavior: https://marcysutton.com/slides/mobile-a11y-seattlejs/#/36\n\nimport contextToElement from '../util/context-to-element';\nimport nodeArray from '../util/node-array';\nimport {getParentComparator} from '../util/compare-position';\nimport getDocument from '../util/get-document';\n\nfunction queryInsignificantBranches({context, filter}) {\n  const containsFilteredElement = function(node) {\n    const containsNode = getParentComparator({parent: node});\n    return filter.some(containsNode);\n  };\n\n  // We'd use a Set() for this, if we could\n  const insiginificantBranches = [];\n\n  // see https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\n  const CollectInsignificantBranchesFilter = function(node) {\n    if (filter.some(element => node === element)) {\n      // we've hit a filtered element and can ignore its children\n      return NodeFilter.FILTER_REJECT;\n    }\n\n    if (containsFilteredElement(node)) {\n      // we've hit a significant tree, so we'll have to keep investigating\n      return NodeFilter.FILTER_ACCEPT;\n    }\n\n    // we've found an insignificant tree\n    insiginificantBranches.push(node);\n    return NodeFilter.FILTER_REJECT;\n  };\n  // IE requires a function, Browsers require {acceptNode: function}\n  // see https://www.bennadel.com/blog/2607-finding-html-comment-nodes-in-the-dom-using-treewalker.htm\n  CollectInsignificantBranchesFilter.acceptNode = CollectInsignificantBranchesFilter;\n\n  const _document = getDocument(context);\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Document/createTreeWalker\n  const walker = _document.createTreeWalker(\n    // root element to start search in\n    context,\n    // element type filter\n    NodeFilter.SHOW_ELEMENT,\n    // custom NodeFilter filter\n    CollectInsignificantBranchesFilter,\n    // deprecated, but IE requires it\n    false\n  );\n\n  while (walker.nextNode()) {\n    // collection things is happening through the filter method\n  }\n\n  return insiginificantBranches;\n}\n\nexport default function({context, filter} = {}) {\n  context = contextToElement({\n    label: 'get/insignificant-branches',\n    defaultToDocument: true,\n    context,\n  });\n\n  filter = nodeArray(filter);\n  if (!filter.length) {\n    throw new TypeError('get/insignificant-branches requires valid options.filter');\n  }\n\n  return queryInsignificantBranches({\n    context,\n    filter,\n  });\n}\n"]}