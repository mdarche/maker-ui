{"version":3,"file":"formik.cjs.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nFormikContext.displayName = 'FormikContext';\n\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers,\n  FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value) as string)\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (\n      validateOnMount &&\n      isMounted.current === true &&\n      isEqual(initialValues.current, props.initialValues)\n    ) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithHighPriority(initialValues.current);\n      }\n    }\n  }, [\n    enableReinitialize,\n    props.initialValues,\n    resetForm,\n    validateOnMount,\n    validateFormWithHighPriority,\n  ]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fieldRegistry.current[name] &&\n      isFunction(fieldRegistry.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: React.SetStateAction<Values>, shouldValidate?: boolean) => {\n      const resolvedValues = isFunction(values) ? values(state.values) : values;\n\n      dispatch({ type: 'SET_VALUES', payload: resolvedValues });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(resolvedValues)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as any).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : options && multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithHighPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function merge(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any, FormValues = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<FormValues>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig<V = any> {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<V>>\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<V>['field']>\n    | string\n    | React.ComponentType\n    | React.ForwardRefExoticComponent<any>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<V>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<V>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig<T> &\n  T & { name: string };\n\nexport type FieldHookConfig<T> = GenericFieldHTMLAttributes & FieldConfig<T>;\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldHookConfig<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>, FieldHelperProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    registerField,\n    unregisterField,\n  } = formik;\n\n  const isAnObject = isObject(propsOrFieldName);\n\n  // Normalize propsOrFieldName to FieldHookConfig<Val>\n  const props: FieldHookConfig<Val> = isAnObject\n    ? (propsOrFieldName as FieldHookConfig<Val>)\n    : { name: propsOrFieldName as string };\n\n  const { name: fieldName, validate: validateFn } = props;\n\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  invariant(\n    fieldName,\n    'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n  );\n\n  return [\n    getFieldProps(props),\n    getFieldMeta(fieldName),\n    getFieldHelpers(fieldName),\n  ];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action ?? '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik helpers + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form status\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form errors state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.FC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.FC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      this.props.validateOnChange &&\n      this.props.formik.validateOnChange &&\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      )\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = formik.getFieldProps({ name, ...props });\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","displayName","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","console","warn","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithHighPriority","useEventCallback","resetForm","nextState","dispatchFn","onReset","maybePromisedOnReset","imperativeMethods","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","shouldValidate","willValidate","setErrors","setValues","resolvedValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","Error","isActuallyValid","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","reason","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","innerRef","only","yupError","inner","message","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","merge","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","Boolean","currentArrayOfValues","isValueInArray","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","apply","useField","propsOrFieldName","fieldName","validateFn","Field","_validate","meta","legacyBag","form","asElement","Form","action","_action","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","fieldError","fieldTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","componentDidUpdate","prevProps","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","FastFieldInner","shouldUpdate","componentDidMount","componentWillUnmount","bag","FastField"],"mappings":"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"}