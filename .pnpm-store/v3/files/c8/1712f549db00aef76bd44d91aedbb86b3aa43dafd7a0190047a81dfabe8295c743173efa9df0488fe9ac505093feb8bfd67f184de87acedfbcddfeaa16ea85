{"version":3,"sources":["../../src/util/image-map.js"],"names":["getMapByName","getMapOfImage","getImageOfArea","name","_document","map","querySelector","element","usemap","getAttribute","slice","parentElement","nodeName","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;UAIgBA,Y,GAAAA,Y;UAOAC,a,GAAAA,a;UAUAC,c,GAAAA,c;;;;;;;;;;;;AAjBT,WAASF,YAAT,CAAsBG,IAAtB,EAA4BC,SAA5B,EAAuC;AAC5C;AACA;AACA,QAAMC,MAAMD,UAAUE,aAAV,CAAwB,eAAe,mBAAUH,IAAV,CAAf,GAAiC,IAAzD,CAAZ;AACA,WAAOE,OAAO,IAAd;AACD;;AAEM,WAASJ,aAAT,CAAuBM,OAAvB,EAAgC;AACrC,QAAMC,SAASD,QAAQE,YAAR,CAAqB,QAArB,CAAf;AACA,QAAI,CAACD,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAMJ,YAAY,2BAAYG,OAAZ,CAAlB;AACA,WAAOP,aAAaQ,OAAOE,KAAP,CAAa,CAAb,CAAb,EAA8BN,SAA9B,CAAP;AACD;;AAEM,WAASF,cAAT,CAAwBK,OAAxB,EAAiC;AACtC,QAAMF,MAAME,QAAQI,aAApB;;AAEA,QAAI,CAACN,IAAIF,IAAL,IAAaE,IAAIO,QAAJ,CAAaC,WAAb,OAA+B,KAAhD,EAAuD;AACrD,aAAO,IAAP;AACD;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAMT,YAAY,2BAAYG,OAAZ,CAAlB;AACA,WAAOH,UAAUE,aAAV,CAAwB,kBAAkB,mBAAUD,IAAIF,IAAd,CAAlB,GAAwC,IAAhE,KAAyE,IAAhF;AACD","file":"image-map.js","sourcesContent":["\nimport cssEscape from 'css.escape';\nimport getDocument from '../util/get-document';\n\nexport function getMapByName(name, _document) {\n  // apparently getElementsByName() also considers id attribute in IE & opera\n  // https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n  const map = _document.querySelector('map[name=\"' + cssEscape(name) + '\"]');\n  return map || null;\n}\n\nexport function getMapOfImage(element) {\n  const usemap = element.getAttribute('usemap');\n  if (!usemap) {\n    return null;\n  }\n\n  const _document = getDocument(element);\n  return getMapByName(usemap.slice(1), _document);\n}\n\nexport function getImageOfArea(element) {\n  const map = element.parentElement;\n\n  if (!map.name || map.nodeName.toLowerCase() !== 'map') {\n    return null;\n  }\n\n  // NOTE: image maps can also be applied to <object> with image content,\n  // but no browser supports this at the moment\n\n  // HTML5 specifies HTMLMapElement.images to be an HTMLCollection of all\n  // <img> and <object> referencing the <map> element, but no browser implements this\n  //   https://www.w3.org/TR/html5/embedded-content-0.html#the-map-element\n  //   https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n  // the image must be valid and loaded for the map to take effect\n  const _document = getDocument(element);\n  return _document.querySelector('img[usemap=\"#' + cssEscape(map.name) + '\"]') || null;\n}\n"]}