{"version":3,"sources":["../../src/event/active-element.js"],"names":["previousActiveElement","raf","observeActiveElement","document","activeElement","body","focus","activeElementEvent","bubbles","cancelable","detail","blur","dispatchEvent","requestAnimationFrame","engage","disengage","cancelAnimationFrame"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAIA,8BAAJ;AAtBA;;;;;;;;;;;;;;;;;;AAuBA,MAAIC,YAAJ;;AAEA,WAASC,oBAAT,GAAgC;AAC9B,QAAI,CAACC,SAASC,aAAd,EAA6B;AAC3B;AACAD,eAASE,IAAT,CAAcC,KAAd;AACD,KAHD,MAGO,IAAIH,SAASC,aAAT,KAA2BJ,qBAA/B,EAAsD;AAC3D;AACA,UAAMO,qBAAqB,qBAAgB,gBAAhB,EAAkC;AAC3DC,iBAAS,KADkD;AAE3DC,oBAAY,KAF+C;AAG3DC,gBAAQ;AACNJ,iBAAOH,SAASC,aADV;AAENO,gBAAMX;AAFA;AAHmD,OAAlC,CAA3B;;AASAG,eAASS,aAAT,CAAuBL,kBAAvB;AACAP,8BAAwBG,SAASC,aAAjC;AACD;;AAED,QAAIH,QAAQ,KAAZ,EAAmB;AACjB;AACD;;AAEDA,UAAMY,sBAAsBX,oBAAtB,CAAN;AACD;;AAED,WAASY,MAAT,GAAkB;AAChBb,UAAM,IAAN;AACAD,4BAAwBG,SAASC,aAAjC;AACAF;AACD;;AAED,WAASa,SAAT,GAAqB;AACnBC,yBAAqBf,GAArB;AACAA,UAAM,KAAN;AACD;;oBAEc,+BAAgB,EAAEa,cAAF,EAAUC,oBAAV,EAAhB,C","file":"active-element.js","sourcesContent":["\n/*\n  Debugging tool that observe changes to activeElement regardless of focus/blur events.\n  This utility does *not* work with ShadowDOM.\n\n  USAGE:\n    engage();\n    document.body.addEventListener('active-element', function(event) {\n      // event.detail.focus: element that received focus\n      // event.detail.blur: element that lost focus\n    }, false);\n\n  NOTE: You *can* use event-delegation on focus events by using the capture-phase:\n    document.body.addEventListener('focus', function(event) {\n      // event.target: element that received focus\n      // event.relatedTarget: element that lost focus\n    }, true);\n*/\n\nimport '../prototype/window.requestanimationframe';\nimport CustomEvent from '../prototype/window.customevent';\nimport decorateService from '../util/decorate-service';\n\nlet previousActiveElement;\nlet raf;\n\nfunction observeActiveElement() {\n  if (!document.activeElement) {\n    // IE10 does not redirect focus to <body> when the activeElement is removed\n    document.body.focus();\n  } else if (document.activeElement !== previousActiveElement) {\n    // https://developer.mozilla.org/en/docs/Web/API/CustomEvent\n    const activeElementEvent = new CustomEvent('active-element', {\n      bubbles: false,\n      cancelable: false,\n      detail: {\n        focus: document.activeElement,\n        blur: previousActiveElement,\n      },\n    });\n\n    document.dispatchEvent(activeElementEvent);\n    previousActiveElement = document.activeElement;\n  }\n\n  if (raf === false) {\n    return;\n  }\n\n  raf = requestAnimationFrame(observeActiveElement);\n}\n\nfunction engage() {\n  raf = true;\n  previousActiveElement = document.activeElement;\n  observeActiveElement();\n}\n\nfunction disengage() {\n  cancelAnimationFrame(raf);\n  raf = false;\n}\n\nexport default decorateService({ engage, disengage });\n"]}