{"version":3,"sources":["../../src/util/platform.js"],"names":["platform","JSON","parse","stringify","os","family","ANDROID","WINDOWS","slice","OSX","IOS","BLINK","layout","GECKO","TRIDENT","EDGE","WEBKIT","version","parseFloat","majorVersion","Math","floor","is","IE9","IE10","IE11"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AACA,MAAMA,WAAWC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,oBAAX,CAAjB;;AAEA;;AAVA;AACA;AACA;AACA;;AAQA,MAAMC,KAAKJ,SAASI,EAAT,CAAYC,MAAZ,IAAsB,EAAjC;AACA,MAAMC,UAAUF,OAAO,SAAvB;AACA,MAAMG,UAAUH,GAAGI,KAAH,CAAS,CAAT,EAAY,CAAZ,MAAmB,SAAnC;AACA,MAAMC,MAAML,OAAO,MAAnB;AACA,MAAMM,MAAMN,OAAO,KAAnB;;AAEA;AACA,MAAMO,QAAQX,SAASY,MAAT,KAAoB,OAAlC;AACA,MAAMC,QAAQb,SAASY,MAAT,KAAoB,OAAlC;AACA,MAAME,UAAUd,SAASY,MAAT,KAAoB,SAApC;AACA,MAAMG,OAAOf,SAASY,MAAT,KAAoB,UAAjC;AACA,MAAMI,SAAShB,SAASY,MAAT,KAAoB,QAAnC;;AAEA;AACA,MAAMK,UAAUC,WAAWlB,SAASiB,OAApB,CAAhB;AACA,MAAME,eAAeC,KAAKC,KAAL,CAAWJ,OAAX,CAArB;AACAjB,WAASmB,YAAT,GAAwBA,YAAxB;;AAEAnB,WAASsB,EAAT,GAAc;AACZ;AACAhB,oBAFY;AAGZC,oBAHY;AAIZE,YAJY;AAKZC,YALY;AAMZ;AACAC,gBAPY,EAOL;AACPE,gBARY,EAQL;AACPC,oBATY,EASH;AACTC,cAVY,EAUN;AACNC,kBAXY,EAWJ;AACR;AACAO,SAAKT,WAAWK,iBAAiB,CAbrB;AAcZK,UAAMV,WAAWK,iBAAiB,EAdtB;AAeZM,UAAMX,WAAWK,iBAAiB;AAftB,GAAd;;oBAkBenB,Q","file":"platform.js","sourcesContent":["\n// sugar for https://github.com/bestiejs/platform.js\n// make sure to ALWAYS reference the layout engine,\n// even if it is not necessary for the condition,\n// as this makes grepping for this stuff simpler\n\nimport _platform from 'platform';\n\n// deep clone of original platform\nconst platform = JSON.parse(JSON.stringify(_platform));\n\n// operating system\nconst os = platform.os.family || '';\nconst ANDROID = os === 'Android';\nconst WINDOWS = os.slice(0, 7) === 'Windows';\nconst OSX = os === 'OS X';\nconst IOS = os === 'iOS';\n\n// layout\nconst BLINK = platform.layout === 'Blink';\nconst GECKO = platform.layout === 'Gecko';\nconst TRIDENT = platform.layout === 'Trident';\nconst EDGE = platform.layout === 'EdgeHTML';\nconst WEBKIT = platform.layout === 'WebKit';\n\n// browser version (not layout engine version!)\nconst version = parseFloat(platform.version);\nconst majorVersion = Math.floor(version);\nplatform.majorVersion = majorVersion;\n\nplatform.is = {\n  // operating system\n  ANDROID,\n  WINDOWS,\n  OSX,\n  IOS,\n  // layout\n  BLINK, // \"Chrome\", \"Chrome Mobile\", \"Opera\"\n  GECKO, // \"Firefox\"\n  TRIDENT, // \"Internet Explorer\"\n  EDGE, // \"Microsoft Edge\"\n  WEBKIT, // \"Safari\"\n  // INTERNET EXPLORERS\n  IE9: TRIDENT && majorVersion === 9,\n  IE10: TRIDENT && majorVersion === 10,\n  IE11: TRIDENT && majorVersion === 11,\n};\n\nexport default platform;\n"]}