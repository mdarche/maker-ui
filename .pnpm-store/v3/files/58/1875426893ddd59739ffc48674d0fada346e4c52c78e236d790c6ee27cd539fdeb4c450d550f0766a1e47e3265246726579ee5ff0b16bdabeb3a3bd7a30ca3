{"version":3,"sources":["../../src/is/native-disabled-supported.js"],"names":["contextToElement","_supports","supports","disabledElementsPattern","disabledElements","input","select","textarea","button","fieldset","form","context","focusFieldsetDisabled","focusFormDisabled","RegExp","Object","keys","join","element","label","nodeName","toLowerCase","Boolean","test"],"mappings":";AACA;;AAEA,OAAOA,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,IAAIC,iBAAJ;;AAEA;AACA,IAAIC,gCAAJ;AACA,IAAMC,mBAAmB;AACvBC,SAAO,IADgB;AAEvBC,UAAQ,IAFe;AAGvBC,YAAU,IAHa;AAIvBC,UAAQ,IAJe;AAKvBC,YAAU,IALa;AAMvBC,QAAM;AANiB,CAAzB;;AASA,eAAe,UAASC,OAAT,EAAkB;AAC/B,MAAI,CAACT,QAAL,EAAe;AACbA,eAAWD,WAAX;;AAEA,QAAIC,SAASU,qBAAb,EAAoC;AAClC,aAAOR,iBAAiBK,QAAxB;AACD;;AAED,QAAIP,SAASW,iBAAb,EAAgC;AAC9B,aAAOT,iBAAiBM,IAAxB;AACD;;AAEDP,8BAA0B,IAAIW,MAAJ,CAAW,OAAOC,OAAOC,IAAP,CAAYZ,gBAAZ,EAA8Ba,IAA9B,CAAmC,GAAnC,CAAP,GAAiD,IAA5D,CAA1B;AACD;;AAED,MAAMC,UAAUlB,iBAAiB;AAC/BmB,WAAO,8BADwB;AAE/BR;AAF+B,GAAjB,CAAhB;;AAKA,MAAMS,WAAWF,QAAQE,QAAR,CAAiBC,WAAjB,EAAjB;AACA,SAAOC,QAAQnB,wBAAwBoB,IAAxB,CAA6BH,QAA7B,CAAR,CAAP;AACD","file":"native-disabled-supported.js","sourcesContent":["\n// Determine if an element supports the disabled attribute\n\nimport contextToElement from '../util/context-to-element';\nimport _supports from '../supports/supports';\nlet supports;\n\n// https://www.w3.org/TR/html5/disabled-elements.html#concept-element-disabled\nlet disabledElementsPattern;\nconst disabledElements = {\n  input: true,\n  select: true,\n  textarea: true,\n  button: true,\n  fieldset: true,\n  form: true,\n};\n\nexport default function(context) {\n  if (!supports) {\n    supports = _supports();\n\n    if (supports.focusFieldsetDisabled) {\n      delete disabledElements.fieldset;\n    }\n\n    if (supports.focusFormDisabled) {\n      delete disabledElements.form;\n    }\n\n    disabledElementsPattern = new RegExp('^(' + Object.keys(disabledElements).join('|') + ')$');\n  }\n\n  const element = contextToElement({\n    label: 'is/native-disabled-supported',\n    context,\n  });\n\n  const nodeName = element.nodeName.toLowerCase();\n  return Boolean(disabledElementsPattern.test(nodeName));\n}\n"]}