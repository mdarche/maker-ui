{"version":3,"sources":["../../src/is/valid-tabindex.js"],"names":["context","supports","validIntegerPattern","focusTabindexTrailingCharacters","validIntegerPatternWithTrailing","validIntegerPatternNoTrailing","element","label","resolveDocument","hasTabindex","hasAttribute","hasTabIndex","isSvgElement","ownerSVGElement","nodeName","toLowerCase","focusSvgTabindexAttribute","focusInvalidTabindex","tabindex","getAttribute","Boolean","test"],"mappings":";;;;;;;;;;;;;;;;;;;oBAYe,UAASA,OAAT,EAAkB;AAC/B,QAAI,CAACC,QAAL,EAAe;AACbA,iBAAW,yBAAX;AACD;;AAED,QAAMC,sBAAsBD,SAASE,+BAAT,GACxBC,+BADwB,GAExBC,6BAFJ;;AAIA,QAAMC,UAAU,gCAAiB;AAC/BC,aAAO,mBADwB;AAE/BC,uBAAiB,IAFc;AAG/BR;AAH+B,KAAjB,CAAhB;;AAMA;AACA;AACA,QAAMS,cAAcH,QAAQI,YAAR,CAAqB,UAArB,CAApB;AACA,QAAMC,cAAcL,QAAQI,YAAR,CAAqB,UAArB,CAApB;;AAEA,QAAI,CAACD,WAAD,IAAgB,CAACE,WAArB,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED;AACA,QAAMC,eAAeN,QAAQO,eAAR,IAA2BP,QAAQQ,QAAR,CAAiBC,WAAjB,OAAmC,KAAnF;AACA,QAAIH,gBAAgB,CAACX,SAASe,yBAA9B,EAAyD;AACvD,aAAO,KAAP;AACD;;AAED;AACA,QAAIf,SAASgB,oBAAb,EAAmC;AACjC,aAAO,IAAP;AACD;;AAED;AACA,QAAMC,WAAWZ,QAAQa,YAAR,CAAqBV,cAAc,UAAd,GAA2B,UAAhD,CAAjB;AACA;AACA;AACA,QAAIS,aAAa,QAAjB,EAA2B;AACzB,aAAO,KAAP;AACD;;AAED,WAAOE,QAAQF,YAAYhB,oBAAoBmB,IAApB,CAAyBH,QAAzB,CAApB,CAAP;AACD,G;;;;;;;;;;;;AAvDD;;AAIA,MAAIjB,iBAAJ;;AAEA;AACA;AACA,MAAMI,gCAAgC,uBAAtC;AACA,MAAMD,kCAAkC,sBAAxC","file":"valid-tabindex.js","sourcesContent":["\n// determine if an element's tabindex attribute has a valid value\n\nimport contextToElement from '../util/context-to-element';\nimport _supports from '../supports/supports';\nlet supports;\n\n// https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers\n// NOTE: all browsers agree to allow trailing spaces as well\nconst validIntegerPatternNoTrailing = /^\\s*(-|\\+)?[0-9]+\\s*$/;\nconst validIntegerPatternWithTrailing = /^\\s*(-|\\+)?[0-9]+.*$/;\n\nexport default function(context) {\n  if (!supports) {\n    supports = _supports();\n  }\n\n  const validIntegerPattern = supports.focusTabindexTrailingCharacters\n    ? validIntegerPatternWithTrailing\n    : validIntegerPatternNoTrailing;\n\n  const element = contextToElement({\n    label: 'is/valid-tabindex',\n    resolveDocument: true,\n    context,\n  });\n\n  // Edge 14 has a capitalization problem on SVG elements,\n  // see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9282058/\n  const hasTabindex = element.hasAttribute('tabindex');\n  const hasTabIndex = element.hasAttribute('tabIndex');\n\n  if (!hasTabindex && !hasTabIndex) {\n    return false;\n  }\n\n  // older Firefox and Internet Explorer don't support tabindex on SVG elements\n  const isSvgElement = element.ownerSVGElement || element.nodeName.toLowerCase() === 'svg';\n  if (isSvgElement && !supports.focusSvgTabindexAttribute) {\n    return false;\n  }\n\n  // @browser-issue Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  if (supports.focusInvalidTabindex) {\n    return true;\n  }\n\n  // an element matches the tabindex selector even if its value is invalid\n  const tabindex = element.getAttribute(hasTabindex ? 'tabindex' : 'tabIndex');\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  // @browser-issue Trident https://connect.microsoft.com/IE/feedback/details/1072965\n  if (tabindex === '-32768') {\n    return false;\n  }\n\n  return Boolean(tabindex && validIntegerPattern.test(tabindex));\n}\n"]}