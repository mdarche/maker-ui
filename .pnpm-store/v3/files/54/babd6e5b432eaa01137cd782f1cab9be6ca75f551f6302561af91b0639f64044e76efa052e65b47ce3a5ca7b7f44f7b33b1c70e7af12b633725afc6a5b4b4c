{"version":3,"sources":["../../src/is/visible.js"],"names":["notRenderedElementsPattern","computedStyle","element","property","window","getComputedStyle","getPropertyValue","notDisplayed","_path","some","notVisible","hidden","visibility","visible","collapsedParent","offset","nodeName","toLowerCase","slice","open","isVisibleRules","context","except","notRendered","cssDisplay","cssVisibility","detailsElement","browsingContext","label","resolveDocument","test","isAudioWithoutControls","hasAttribute","frameElement","_isVisible","isVisible","rules"],"mappings":"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","file":"visible.js","sourcesContent":["\n// determine if an element is rendered\n// NOTE: that does not mean an element is visible in the viewport, see util/visible-area\n\nimport findIndex from '../util/array-find-index';\nimport getParents from '../get/parents';\nimport contextToElement from '../util/context-to-element';\nimport getFrameElement from '../util/get-frame-element';\n\n// https://www.w3.org/TR/html5/rendering.html#being-rendered\n// <area> is not rendered, but we *consider* it visible to simplfiy this function's usage\nconst notRenderedElementsPattern = /^(area)$/;\n\nfunction computedStyle(element, property) {\n  return window.getComputedStyle(element, null)\n    .getPropertyValue(property);\n}\n\nfunction notDisplayed(_path) {\n  return _path.some(function(element) {\n    // display:none is not visible (optimized away at layout)\n    return computedStyle(element, 'display') === 'none';\n  });\n}\n\nfunction notVisible(_path) {\n  // https://github.com/jquery/jquery-ui/blob/master/ui/core.js#L109-L114\n  // NOTE: a nested element can reverse visibility:hidden|collapse by explicitly setting visibility:visible\n  // NOTE: visibility can be [\"\", \"visible\", \"hidden\", \"collapse\"]\n  const hidden = findIndex(_path, function(element) {\n    const visibility = computedStyle(element, 'visibility');\n    return visibility === 'hidden' || visibility === 'collapse';\n  });\n\n  if (hidden === -1) {\n    // there is no hidden element\n    return false;\n  }\n\n  const visible = findIndex(_path, function(element) {\n    return computedStyle(element, 'visibility') === 'visible';\n  });\n\n  if (visible === -1) {\n    // there is no visible element (but a hidden element)\n    return true;\n  }\n\n  if (hidden < visible) {\n    // there is a hidden element and it's closer than the first visible element\n    return true;\n  }\n\n  // there may be a hidden element, but the closest element is visible\n  return false;\n}\n\nfunction collapsedParent(_path) {\n  let offset = 1;\n  if (_path[0].nodeName.toLowerCase() === 'summary') {\n    offset = 2;\n  }\n\n  return _path.slice(offset).some(function(element) {\n    // \"content children\" of a closed details element are not visible\n    return element.nodeName.toLowerCase() === 'details' && element.open === false;\n  });\n}\n\nfunction isVisibleRules({\n  context,\n  except = {\n    notRendered: false,\n    cssDisplay: false,\n    cssVisibility: false,\n    detailsElement: false,\n    browsingContext: false,\n  },\n} = {}) {\n  const element = contextToElement({\n    label: 'is/visible',\n    resolveDocument: true,\n    context,\n  });\n\n  const nodeName = element.nodeName.toLowerCase();\n  if (!except.notRendered && notRenderedElementsPattern.test(nodeName)) {\n    return true;\n  }\n\n  const _path = getParents({context: element});\n\n  // in Internet Explorer <audio> has a default display: none, where others have display: inline\n  // but IE allows focusing <audio style=\"display:none\">, but not <div display:none><audio>\n  // this is irrelevant to other browsers, as the controls attribute is required to make <audio> focusable\n  const isAudioWithoutControls = nodeName === 'audio' && !element.hasAttribute('controls');\n  if (!except.cssDisplay && notDisplayed(isAudioWithoutControls ? _path.slice(1) : _path)) {\n    return false;\n  }\n\n  if (!except.cssVisibility && notVisible(_path)) {\n    return false;\n  }\n\n  if (!except.detailsElement && collapsedParent(_path)) {\n    return false;\n  }\n\n  if (!except.browsingContext) {\n    // elements within a browsing context are affected by the\n    // browsing context host element's visibility and tabindex\n    const frameElement = getFrameElement(element);\n    const _isVisible = isVisibleRules.except(except);\n    if (frameElement && !_isVisible(frameElement)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// bind exceptions to an iterator callback\nisVisibleRules.except = function(except = {}) {\n  const isVisible = function(context) {\n    return isVisibleRules({\n      context,\n      except,\n    });\n  };\n\n  isVisible.rules = isVisibleRules;\n  return isVisible;\n};\n\n// provide isVisible(context) as default iterator callback\nconst isVisible = isVisibleRules.except({});\nexport default isVisible;\n"]}