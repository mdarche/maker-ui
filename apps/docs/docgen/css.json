{
	"id": 0,
	"name": "@maker-ui/css",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 4,
			"name": "GlobalProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 6,
					"name": "breakpoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/css/src/Global.tsx",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					}
				},
				{
					"id": 5,
					"name": "styles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/css/src/Global.tsx",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"id": 19,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "Interpolation",
								"package": "@emotion/serialize",
								"name": "Interpolation"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						6,
						5
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/css/src/Global.tsx",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 15,
			"name": "MakerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Support for the breakpoints prop and responsive CSS scales.",
				"tags": [
					{
						"tag": "param",
						"text": "An array of breakpoints that determines the css prop media queries",
						"param": "breakpoints"
					},
					{
						"tag": "param",
						"text": "A css object that can support array values for all nested properties\n",
						"param": "css"
					},
					{
						"tag": "remarks",
						"text": "\nUsed by all Maker UI components, primitives, and custom jsx pragma.\n\n"
					}
				]
			},
			"children": [
				{
					"id": 17,
					"name": "breakpoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An array of breakpoints that determines the css prop media queries"
					},
					"sources": [
						{
							"fileName": "packages/css/src/types.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 13,
						"name": "Breakpoints"
					}
				},
				{
					"id": 16,
					"name": "css",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "A css object that can support array of responsive values for all nested properties"
					},
					"sources": [
						{
							"fileName": "packages/css/src/types.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 14,
						"name": "StyleObject"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						17,
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/css/src/types.ts",
					"line": 16,
					"character": 17
				}
			]
		},
		{
			"id": 13,
			"name": "Breakpoints",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/css/src/types.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				}
			}
		},
		{
			"id": 19,
			"name": "Interpolation",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExternal": true
			},
			"comment": {
				"shortText": "Direct export from EmotionJS"
			},
			"sources": [
				{
					"fileName": "node_modules/@emotion/serialize/types/index.d.ts",
					"line": 60,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 20,
					"name": "Props",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"qualifiedName": "InterpolationPrimitive",
						"package": "@emotion/serialize",
						"name": "InterpolationPrimitive"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 20,
								"qualifiedName": "Props",
								"package": "@emotion/serialize",
								"name": "Props"
							}
						],
						"qualifiedName": "ArrayInterpolation",
						"package": "@emotion/serialize",
						"name": "ArrayInterpolation"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 20,
								"qualifiedName": "Props",
								"package": "@emotion/serialize",
								"name": "Props"
							}
						],
						"qualifiedName": "FunctionInterpolation",
						"package": "@emotion/serialize",
						"name": "FunctionInterpolation"
					}
				]
			}
		},
		{
			"id": 18,
			"name": "ResponsiveScale",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "A string, number, or array of either lets you stack values for media queries.",
				"tags": [
					{
						"tag": "example",
						"text": "A simple example:\n<div css={{ height: [50, 100]}} />\n"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/css/src/types.ts",
					"line": 29,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14,
			"name": "StyleObject",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/css/src/types.ts",
					"line": 4,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "object"
					},
					{
						"type": "reference",
						"id": 19,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"qualifiedName": "Interpolation",
						"package": "@emotion/serialize",
						"name": "Interpolation"
					}
				]
			}
		},
		{
			"id": 1,
			"name": "Global",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/css/src/Global.tsx",
					"line": 20,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "Global",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A global style declaration that supports responsive arrays and the `breakpoints` prop",
						"tags": [
							{
								"tag": "link",
								"text": "https://maker-ui.com/docs/elements/global\n"
							}
						]
					},
					"parameters": [
						{
							"id": 3,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4,
								"name": "GlobalProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react",
						"name": "Element"
					}
				}
			]
		},
		{
			"id": 7,
			"name": "jsx",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/css/src/jsx-runtime.ts",
					"line": 20,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 8,
					"name": "jsx",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "JSX that supports responsive arrays and the `breakpoints` prop. Uses normal\nReact.createElement if `breakpoints` and `css` are undefined..",
						"tags": [
							{
								"tag": "remarks",
								"text": "\nThis is just a prop-formatting wrapper for Emotion's jsx export\n"
							},
							{
								"tag": "link",
								"text": "https://maker-ui.com/docs/jsx\n\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 9,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 10,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 9,
										"name": "P"
									}
								],
								"qualifiedName": "React.ElementType",
								"package": "@types/react",
								"name": "ElementType"
							}
						},
						{
							"id": 11,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"qualifiedName": "React.Attributes",
										"package": "@types/react",
										"name": "Attributes"
									},
									{
										"type": "reference",
										"id": 9,
										"name": "P"
									}
								]
							}
						},
						{
							"id": 12,
							"name": "children",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "React.ReactNode",
									"package": "@types/react",
									"name": "ReactNode"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 9,
								"name": "P"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react",
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"qualifiedName": "React.ReactElement",
						"package": "@types/react",
						"name": "ReactElement"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				4,
				15
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				13,
				19,
				18,
				14
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1,
				7
			]
		}
	],
	"sources": [
		{
			"fileName": "packages/css/src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}